---

- name: Provision ipfs user, ipfs tools and ipfs software
  hosts: ipfs_nodes
  become: yes
  become_user: root
  roles:
    - role: user_role
      user_role_users:
        - name: "fuse"
          shell: "/bin/bash"
          groups:
            - "fuse"
          append: "yes"
    # Wikipedia upload deps
    - role: rust
    - role: zim
      zim_user: "fuse"
    # dependency install web ui and peerpad
    - role: nodejs
      nodejs_version: "8"
    - role: go
      go_user: "fuse"
      go_version: "1.9.2"
      go_user_home: "/home/fuse"
    # create self signed cert
    - role: openssl
      openssl_generator_complexity: 2048
    # this is an admin role, creating nginx proxy and file server for swarm.key
    - role: ipfs_swarm_keygen
      ipfs_swarm_keygen_user: "fuse"
      ipfs_swarm_keygen_go_path: "/home/fuse/app"
      ipfs_swarm_keygen_go_bin_dir: /usr/local/go/bin
      # http fileserver
      ipfs_swarm_keygen_nginx_root_dir: "/var/tmp/nginx_swarm"
      ipfs_swarm_keygen_nginx_port: "8083"
      # peerpad
      ipfs_swarm_keygen_peerpad_build_dir: "/opt/ipfs_peerpad_master/build"
      # peerpad nginx ssl key and cert, as openssl role creates
      ipfs_swarm_keygen_openssl_cert_dest: "/etc/ssl/{{ inventory_hostname }}/{{ inventory_hostname }}.crt"
      ipfs_swarm_keygen_openssl_key_dest: "/etc/ssl/{{ inventory_hostname }}/{{ inventory_hostname }}.key"
      ipfs_swarm_keygen_openssl_dh_param_dest: "/etc/ssl/certs/dhparam.pem"
      ipfs_swarm_keygen_go_pkgs:
        - "github.com/Kubuxu/go-ipfs-swarm-key-gen/ipfs-swarm-key-gen"
    # Pull key from selected node
    - role: ipfs_swarm_keypull
      ipfs_swarm_keypull_user: "fuse"
      ipfs_swarm_keypull_ipfs_path: "/home/fuse/.ipfs"
      ipfs_swarm_keypull_src: "http://{{ groups['ipfs_nodes'][0] }}:8083/swarm.key"
    # Install and configure ipfs, but wait til bootstrapped to start
    - role: ipfs
      ipfs_api_listen_iface: "{{ hostvars[inventory_hostname]['ansible_enp0s8']['ipv4']['address']|default('0.0.0.0') }}"
      ipfs_gw_listen_iface: "{{ hostvars[inventory_hostname]['ansible_enp0s8']['ipv4']['address']|default('0.0.0.0') }}"
      ipfs_swarm_list: "{{ hostvars|ipfs_format(groups['ipfs_nodes'],'ansible_enp0s8','4001') }}"
    # Has to be run after ipfs installed, so we can read custom facts from the created config file
    - role: ipfs_facts
      ipfs_facts_user: "fuse"
    # nodejs apps
    #- role: ipfs_peerpad
    #  ipfs_peerpad_user: "fuse"
    #  ipfs_peerpad_gateway: "http://{{ inventory_hostname }}:8080/ipfs"
    #  ipfs_peerpad_swarm_list: "{{ hostvars|ipfs_format(groups['ipfs_nodes'],'ansible_enp0s8','4001') }}"
    - role: ipfs_webui
      ipfs_webui_user: "fuse"
      ipfs_webui_line_overrides_list:
        - line: "const host = '{{ hostvars[inventory_hostname]['ansible_enp0s8']['ipv4']['address']|default('0.0.0.0') }}'"
          regexp: "^const\\s+host\\s+=.*"
          dest: "/opt/ipfs_webui_vmaster/src/app/js/components/ipfs.js"
        - line: "const port = '5001'"
          regexp: "^const\\s+port\\s+=.*"
          dest: "/opt/ipfs_webui_vmaster/src/app/js/components/ipfs.js"
        - line: "let gateway = '//{{ hostvars[inventory_hostname]['ansible_enp0s8']['ipv4']['address']|default('0.0.0.0') }}:8080'"
          regexp: "^let\\s+gateway\\s+=.*"
          dest: "/opt/ipfs_webui_vmaster/src/app/js/components/ipfs.js"
        - line: "const host = '{{ hostvars[inventory_hostname]['ansible_enp0s8']['ipv4']['address']|default('0.0.0.0') }}'"
          regexp: "^const\\s+host\\s+=.*"
          dest: "/opt/ipfs_webui_vmaster/src/app/js/services/api.js"
        - line: "const port = '5001'"
          regexp: "^const\\s+port\\s+=.*"
          dest: "/opt/ipfs_webui_vmaster/src/app/js/services/api.js"
    #- role: ethereum
    #- role: ethereum_contracts
