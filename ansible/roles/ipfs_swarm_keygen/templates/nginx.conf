user www-data;

# System configuration
worker_processes  3;
events {
    worker_connections  1024;
}

# Web configuration
http {
    server {
        root {{ ipfs_swarm_keygen_peerpad_build_dir }};
        listen 443 ssl http2 default_server;
        listen [::]:443 ssl http2 default_server;

        ssl_certificate {{ ipfs_swarm_keygen_openssl_cert_dest }};
        ssl_certificate_key {{ ipfs_swarm_keygen_openssl_key_dest }};
        ssl_dhparam {{ ipfs_swarm_keygen_openssl_dh_param_dest }};

        # from https://cipherli.st/
        # and https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
        ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
        ssl_ecdh_curve secp384r1;
        #ssl_session_cache shared:SSL:10m;
        #ssl_session_tickets off;
        #ssl_stapling on;
        #ssl_stapling_verify on;
        #resolver 8.8.8.8 8.8.4.4 valid=300s;
        #resolver_timeout 5s;
        # Disable preloading HSTS for now.  You can use the commented out header line that includes
        # the "preload" directive if you understand the implications.
        #add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";
        #add_header Strict-Transport-Security "max-age=63072000; includeSubdomains";
        #add_header X-Frame-Options DENY;
        #add_header X-Content-Type-Options nosniff;

        server_name {{ ipfs_swarm_keygen_peerpad_hostname }};

        location / {
                # First attempt to serve request as file, then
                # as directory, then fall back to displaying a 404.
                try_files $uri $uri/ =404;
                include /etc/nginx/mime.types;
        }
    }
    server {
        listen {{ ipfs_swarm_keygen_nginx_port }};
        root {{ ipfs_swarm_keygen_nginx_root_dir }};
        location / {
            autoindex on;
        }
    }
}
